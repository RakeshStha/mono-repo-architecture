```yaml
stages:
  - prepare
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""  # Disable TLS for docker:dind
  IMAGE_NAME: $CI_REGISTRY_IMAGE/monorepo-app:$CI_COMMIT_SHA

default_job:
  image: node:20
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest --activate
    - pnpm install
    - git fetch origin main

prepare_changes:
  stage: prepare
  image: node:20
  script:
    - echo "Checking changed projects..."
    - |
      CHANGED_FILES=$(git diff --name-only origin/main HEAD)
      echo "$CHANGED_FILES" > changed_files.txt
  artifacts:
    paths:
      - changed_files.txt

build_monorepo:
  stage: build
  image: docker:24.0.2
  services:
    - docker:dind
  needs: [prepare_changes]
  script:
    - |
      if grep -q "^apps/project-a/" changed_files.txt || grep -q "^apps/project-b/" changed_files.txt || grep -q "^packages/common/" changed_files.txt || grep -q "^Dockerfile$" changed_files.txt || grep -q "^nginx/default.conf$" changed_files.txt; then
        echo "âœ… Building monorepo image..."
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        docker build -t $IMAGE_NAME .
        docker push $IMAGE_NAME
      else
        echo "ðŸŸ¢ No relevant changes â€” skipping build"
      fi
  artifacts:
    paths:
      - apps/project-a/dist/
      - apps/project-b/dist/

deploy:
  stage: deploy
  image: alpine:latest
  needs: [build_monorepo]
  before_script:
    - apk add --no-cache sshpass openssh-client
  script:
    - |
      if grep -q "^apps/project-a/" changed_files.txt || grep -q "^apps/project-b/" changed_files.txt || grep -q "^packages/common/" changed_files.txt || grep -q "^Dockerfile$" changed_files.txt || grep -q "^nginx/default.conf$" changed_files.txt; then
        echo "ðŸš€ Deploying to server..."
        sshpass -p $DEPLOY_PASSWORD ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST << 'EOF'
          docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
          docker pull $IMAGE_NAME
          docker stop monorepo || true
          docker rm monorepo || true
          docker run -d --name monorepo -p 3000:80 $IMAGE_NAME
        EOF
      else
        echo "ðŸŸ¢ No relevant changes â€” skipping deployment"
      fi
  only:
    - main
```